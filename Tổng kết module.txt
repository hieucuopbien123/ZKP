ZKP



# Background ZKP
-> Example: 
"I know the private key that corresponds to this public key" : in this case, the proof would not reveal any information about the private key.
"I know a private key that corresponds to a public key from this list" : as before, the proof would not reveal information about the private key but in this case, the associated public key would also remain private.
"This is the hash of a blockchain block that does not produce negative balances" : in this case, the proof would not reveal any information about the amount, origin or destination of the transactions included in the block.

-> Zk-Snark chứng minh 1 câu lệnh tính toán, nhưng nó k giải quyết vấn đề trực tiếp mà phải chuyển đổi về đúng dạng mạch số học. VD mạch số học F_p là 1 mạch gồm các sợi dây chứa giá trị từ trường F_p và nối với các cổng cộng và cổng nhân modulo p lại.

1 mạch số học sẽ lấy vài tín hiệu làm input (0,...,p-1). Output của mọi cổng cộng và nhân gọi là intermediate signal, trừ cổng cuối là output signal. 
Circom dùng số p rất lớn (10^80 cơ). Đó là thứ tự của trường vô hướng của B254 curve (EIP 196).
Còn dùng order of the scalar field of the BLS12-381 và goldilocks prime dùng trong Plonky2
1 mạch có các constraint phải là bậc 2, linear hoặc constant. Set of constraints gọi là rank-1 constraint system (R1CS). 
Vc ZKSnark dùng mạch số học tạo sự đơn giản trong code, các protocol ZKP khác khó ỉa

-> Thiết kế mạch:
Witness mà người dùng cung vào mạch chỉ đơn giản chứng minh rằng ta biết 1 set of input thỏa mãn mạch mà thôi

***Mọi mạch dều thỏa mãn tính chất: mạch phải được thiết kế sao cho người dùng k thể tái tạo được mọi input từ R1CS + public input. Nếu tái tạo được thì mạch đó vô nghĩa
=> Lỗi tránh hiểu lầm: Parameter của function là public và có thể bị lộ nhé, do đó buộc dùng zkp ở nhiều TH. Người dùng k thể decode ngược params do zksnark sinh ra, điều này đồng nghĩa zkp thực sự khiến cho blockchain k còn hoàn toàn public nhưng vẫn chứng minh được tính đúng đắn. Điều này hiển nhiên khi mà họ chỉ cần dùng cryptographic hash data phát là nó k còn public nx ngay nhưng nhờ zkp, nó vẫn chứng minh là hợp lệ được.



# Basic
DAO(Decentralized Autonomous Organization) là tổ chức tự trị phi tập trung. Cơ chế là họ tạo ra 1 smart contract, contract này có thể tự động thay đổi các thông số của protocol hiện tại phụ thuộc vào số phiếu vote của mọi người. DAO được hoạt động mà k cần sự kiểm soát
Thông thường, để được vote thì mọi người trong hệ thống phải stake token để nhận về veToken. Bỏ ra veToken để vote trên hệ thống, càng nhiều ve thì lực vote càng mạnh. Thông thường các hệ thống sẽ tạo incentive cho người dùng stake ve kiểu ai stake nhiều ve thì sau này fee trên hệ thống sẽ rơi vào họ nhiều hơn chẳng hạn. VeToken có thể là ERC721 or ERC1155 tùy dự án.
Một ví dụ về DAO là The DAO, một tổ chức DAO nổi tiếng đầu tiên được tạo ra trên blockchain Ethereum vào năm 2016. The DAO là một quỹ đầu tư phi tập trung, mục đích của nó là quản lý các khoản đầu tư từ người dùng Ethereum. Thành viên của The DAO được quyền bỏ phiếu về các dự án đầu tư và các quyết định liên quan đến hoạt động của tổ chức, tất cả các quyết định đều được thực hiện thông qua các hợp đồng thông minh được mã hóa trên blockchain Ethereum.
Tuy nhiên, The DAO đã gặp phải một vụ việc an ninh mạng lớn vào năm 2016, dẫn đến mất mát khoảng 50 triệu đô la Mỹ. Vụ việc này đã dẫn đến sự phân hóa và tranh cãi trong cộng đồng blockchain về tính bảo mật của các DAO và khả năng sửa chữa các lỗi được phát hiện sau khi triển khai. Tuy nhiên, nhiều DAO khác đã được tạo ra sau đó và đang được sử dụng để quản lý các dự án và tài sản kỹ thuật số trên nhiều nền tảng blockchain khác nhau.

-> Có nhiều phương pháp mở rộng blockchain, bao gồm ZKRollups, Plasma, Payment Channel,...
Phân biệt:
Optimism và Arbitrum One là 2 blockchain mở rộng tốc độ cao hơn sử dụng công nghệ Optimistic Rollup.
ZK Rollup và Optimistic Rollup không liên quan gì tới nhau, đây là 2 công nghệ độc lập và có phương pháp khác nhau để mở rộng blockchain. VD dYdX, Loopring dùng ZKRollup để đạt tốc độ cao
ZKSync là 1 hệ sinh thái sử dụng công nghệ ZkRollup. Bản thân zksync không phải 1 giải pháp mở rộng blockchain mà chỉ là 1 hệ sinh thái.

Zero knowledge proof là kiểu bằng chứng mà ai cũng xác thực được nó là đúng dù không biết về nó. 
Ví dụ: Alice muốn chứng minh cho Bob rằng cô ấy có mật khẩu để mở một tài khoản mà không muốn tiết lộ mật khẩu đó cho Bob. Alice có thể sử dụng zero-knowledge proof để làm điều này.

Optimism là blockchain riêng nhưng nó là mở rộng layer2 của Ethereum. OP là đồng coin quản trị của mạng Optimism và người dùng có thể dùng nó để tham gia vào mạng này như voting các thứ như chọn validator chẳng hạn. Arbitrum cũng tương tự là layer 2 blockchain của ethereum và đồng ARB là coin nền tảng nhưng thanh toán gas bằng ETH. Nên mở ví metamask sẽ thấy lượng ETH có trong mạng. 
Thực tế 2 blockchain layer 2 này dùng giải pháp mở rộng Optimistic Rollup kiểu tổng hợp nhiều transaction lại thành 1 cụm rồi gửi lên Ethereum 1 thể nên chỉ gom lại thành 1 transaction với phí gas rẻ hơn. 

Optimistic Rollup sử dụng fraud proof. Còn ZKRollup sử dụng zero knowledge proof (valid proof)

-> Tổng quan:
Các giải pháp layer 2: ZK-Rollups, Optimistic Rollups, Sidechains, State Channel... nhưng qtr nhất vẫn là ZK-Rollups và Optimistic Rollups

ZK-Rollup là 1 giải pháp nói rất chung. Cơ chế nó cuộn các giao dịch trên sidechain thành 1 block duy nhất và gửi lên Ethereum để xác thực. Nó tạo ra 1 bằng chứng ngắn gọn cho khối làm offchain rồi gửi lên Ethereum chỉ cần xác minh bằng chứng mà k cần thực hiện lại giao dịch

ZK-Rollups đặc trưng bởi 2 yếu tố: 
Data được lưu trữ onchain hay offchain
Zero knowledge scheme được sử dụng là gì

Tức là dù trải qua cách nào thì cơ chế nó vẫn như bên trên, chỉ là có các cách khác nhau để làm điều đó và họ đặt cho cái tên khác nhau

1) Data được lưu trữ onchain gọi là ZK Rollup là kiểu bình thường vẫn hay dùng. Chi phí cao hơn, chậm hơn nhưng phân quyền tốt hơn. Data được lưu onchain tức nó phải nằm trên 1 blockchain độc lập như 1 sidechain chẳng hạn và bất cứ ai lấy lúc nào cũng được. 
Data được lưu trữ offchain gọi là Validium. Nó được cung từ 1 central data provider host tập trung. Ưu điểm là giá rẻ, tốc độ cao nhưng kém phân quyền nên ít người dùng. Central data provider đó nắm toàn quyền về data. Còn lại cơ chế y hệt zkrollup là thực hiện giao dịch offchain xong cung ra zero-knowledge để Ethereum gốc verify.

2) Tạo zero knowledge dùng zk-SNARK(Succinct non-interactive argument of knowledge) được dùng phổ biến. Succinct(cô đọng) và Non-interactive(K tương tác) tạo ra proof có kích thước nhỏ và khả năng bảo mật kém hơn zk-STARK(nhưng vẫn bảo mật đủ tốt). Nó k cần sự tương tác giữa bên chứng minh và bên xác minh, phải cài đặt thông số tin cậy ban đầu.
Có nhiều dự án dùng như zkSync, Loopring, Hermez, Aztec, Polygon Zero

zk-STARK(Succinct transparent argument of knowledge) được Starware giới thiệu năm 2018 và ít phổ biến hơn. Cơ chế dùng hàm băm mã hóa chống bảo mật tốt nhưng kích thước proof lớn dẫn đên năng lượng và chi phí cao. K cần sử dụng thông số tin cậy ban đầu.
Có dự án như StarkWare, Polygon Miden

Tìm hiểu về StarkWare và ZkSync
1) StarkWare
StarkWare không phải là 1 protocol mà là tên 1 công ty mẹ (là 1 dự án). Công ty hay dự án này cung cấp khả năng mở rộng blockchain bằng công nghệ STARK để triển khai và xác thực zero knowledge proof, 1 bước trong zkrollup. StarkWare có 5 sản phẩm: 
Starknet là 1 network phi tập trung đầy đủ sử dụng ZkRollup STARK. Nó là 1 blockchain layer 2 riêng base lên Ethereum có nhiều sản phẩm DApp trên đó. Nó là 1 hệ sinh thái riêng
Starkex là 1 phiên bản của Starknet được tùy chỉnh riêng để phục vụ cho Trading
VeeDo: tạo số random
Cairo: ngôn ngữ lập trình tính toán chung của Starkex và Starknet
SHARP: Hệ thống thu thập các Cairo Programs để tạo ra 1 proof cho tất cả (Sau đó proof được đưa lên Ethereum và được xác minh bởi 1 STARK)

2) ZkSync
MatterLabs là 1 công ty cung cấp giải pháp mở rộng Ethereum bằng Zero knowledge proof. 1 trong những sản phẩm nổi tiếng là ZkSync.

Như v ZKSync là 1 protocol, 1 sản phẩm do MatterLabs tạo ra. Ta có thể dùng protocol có sẵn này để dùng ZkRollup với zk-SNARK. Nếu ta tự nghĩ ra thuật toán sinh zero knowledge proof khác mà dùng zk-SNARK thì cũng được mà k cần dùng protocol zksync có sẵn hỗ trợ việc đó. 

Vậy protocol này có những cái gì? 4 thành phần zksync v1, ZkEVM, ZKPorter, zksync 2.0
Cái đầu tiên có là zksync v1. Nó là 1 blockchain layer 2 base trên Ethereum. Tức khi ta dùng zksync, ta đang dùng cái blockchain này. Nó k có coin nền tảng mà support ETH bth.
Cơ chế tiền vẫn lưu trên smart contract onchain như bth nhưng việc tính toán và lưu trữ dữ liệu được thực hiện offchain. 1 cụm các transaction được tổng hợp lại thành 1 khối rollup và sinh ra 1 zero knowledge proof chứa bằng chứng về tính hợp lệ của mọi giao dịch trong khối Rollup. Nó ứng dụng ZkRollup và ở bước sinh bằng chứng thì sử dụng zk-SNARK thôi. 
zkSync v1 chỉ hỗ trợ vận chuyển ERC20 giá rẻ, NFT và 1 vài lệnh trade

Như v ta code circom là đang code mạch để sau đó dùng zkSnark sinh bằng chứng cho mạch, là 1 phần của zkRollup protocol mở rộng layer 2, và ZKSync là 1 ví dụ ứng dụng zkrollup có đầy đủ.

Về sau zkSync 2.0 ra đời đem lại cải tiến lớn đi kèm với ứng dụng của 2 thành phần quan trọng:
zkEVM là máy chủ ảo thực thi các SM tương thích với thuật toán Zero knowledge proof. Trước đó Optimistic Rollup có thể tương thích EVM rồi nhưng ZK Rollup thì chưa. Nhờ zkEVM mà khi dùng phương pháp zksync, nó tương thích được với EVM.
zkPorter: trạng thái layer 2 được chia làm 2 bên là zkRollup với onchain data availability và zkPorter với offchain data availability. Contract và tài khoản bên ZKRollup có thể tương tác với tk bên zkPorter và ngược lại. 
VD layer 2 zksync 2.0 chia làm 2 nửa, Uniswap triển khai smart contract trên nửa zkRollup và người dùng với tk trên nửa zkPorter có thể swap với nó với chi phí cực kỳ rẻ. Là vì phí trên nửa rollup là do xuất bản dữ liệu lên Ethereum mà tài khoản zkPorter có thể thực hiện hàng nghìn lần swap xong chỉ 1 bản cập nhật duy nhất cần xuất bản thực sự lên Ethereum thôi. Người dùng đk tk trên zkPorter để tạo ra nguồn data offchain, có thể tương tác với smart contract ở nửa rollup với giá rẻ.

zkSync 2.0 chính là zksync nhưng mạnh hơn. Bản gốc k hỗ trợ smart contract như bản 2.0 có zkEVM. Đầu tiên SM sẽ bị compiler chuyển đổi từ Solidity thành zkEVM nhằm tương thích với EVM và nguồn dữ liệu có sẵn offchain từ zkPorter.



# Phân biệt
Circom chỉ là code sinh ra mạch logic thôi

iden3 là 1 thư viện cung các công cụ có sẵn hỗ trợ xây dựng ứng dụng decentralized. Nó có nhiều công cụ hơn là chỉ ZKP.

Zk Snark là 1 công nghệ xây dựng bằng chứng mà k lộ thông tin. Nó là 1 công nghệ nói chung chứ k nhất thiết cứ phải là sinh bằng chứng từ 1 mạch circom

Groth là 1 phương pháp xây dựng bằng chứng NIZK trong zk Snark. Nó chỉ là 1 pp nằm trong zk Snark để tạo non-interactive zero knowledge thôi. Non-interactive zero knowledge tức là verifier có thể xác thực độc lập mà k cần tương tác của người tạo ra bằng chứng. Do đó rất phù hợp với Ethereum vì nó dùng luôn contract để verify bằng chứng. Tùy proof valid hay không mà perform action tương ứng. Do đó trong Ethereum ta đang dùng NIZK chứ kp ZK bth.

Groth16 và plonk là 2 công cụ dùng để generate và verify ZKP trong snarkjs:
Groth16 cũ hơn, dễ dùng hơn và sử dụng thuật toán elliptic curve cryptography. Nó phù hợp khi cần sinh nhiều proof cho cùng 1 mạch.
PLONK dùng polynomial commitment schemes chuyển đổi đa thức thành tập evaluation point. Nó phù hợp khi cần xử lý nhiều mạch khác nhau. Groth 16 cần trusted ceremony cho từng mạch, còn PLONK và FFLONK(beta version) chỉ cần 1 ptau ceremony chung là được.
=> Dùng cái nào cũng chỉ thay command 1 tí thôi: https://github.com/iden3/snarkjs/blob/master/README.md

SnarkJS là JS lib giúp implement zkSNARK, hỗ trợ dev trong việc sinh ra zero knowledge proof bằng code JS.

ZKRollup nói chung là 1 phương pháp mở rộng layer 2. Cụ thể là nó là công nghệ gom các giao dịch lại với nhau trước khi ghi vào blockchain chính để nén số lượng giao dịch cần ghi vào blockchain. 
ZKRollup sử dụng ZKSnark để làm bước sinh bằng chứng cho nó.

=> Tức ta cần dùng circom sinh mạch cho contract solidity, rồi dùng ZKSnark sinh bằng chứng, rồi dùng ZKRollup để cuộn com các giao dịch lại và gửi lên blockchain. 

-> Sau cùng mới dùng ZKEVM.
1 EVM bình thường mà 1 node trong mạng Ethereum sử dụng để thực thi smart contract, xử lý giao dịch để cập nhật trạng thái lên chain của node đó, k hỗ trợ ZKP. Nếu muốn dùng ZKP, ta phải code circom rồi dùng ZKSnark sinh proof và hàm verify nhét vào Smart contract để EVM compile

ZKEVM giống EVM nhưng hõ trợ ZKP, vẫn compile solidity sm. ZKEVM hỗ trợ sẵn ZKP và cho phép dev viết SM bằng solidity và deploy lên blockchain dựa trên ZKP.



# ZKSnark



# Project BattleZip

# Project Tornadol Cash
Giúp hiểu từng bước tạo mạch, contract, frontend tương tác, từng bước truyền tham số vào mạch, dùng snark lấy bằng chứng đủ thứ


